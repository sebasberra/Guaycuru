# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
#        Pruebas\SeguridadBundle\Entity\User: plaintext
            
    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
#    providers:
#        
#        cadena_autenticacion:
#            chain:
#                providers: [hardcode, usuarios_db]
#                
#        hardcode:
#            memory:
#                users:
#                    sebas:
#                        password: sebas
#                        roles: 'ROLE_USER'
#                    admin:
#                        password: admin
#                        roles: 'ROLE_ADMIN'
#
#        usuarios_db:
#            entity:
#                class: Pruebas/SeguridadBundle:User
#                property: username
#                # if you're using multiple entity managers
#                # manager_name: customer
    providers: 
        in_memory:
            memory: ~        
            
#    firewalls:
#        # disables authentication for assets and the profiler, adapt it according to your needs
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        main:
#            anonymous: ~
#            # activate different ways to authenticate
#
#            http_basic: ~
#            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate
#
#            # form_login: ~
#            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
#        
#            # ...
#            logout:
#                path:   /logout
#                target: /
#
#            provider: cadena_autenticacion

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~            
            
            form_login:
                
                # aca estaria el login de sicap
                login_path: /login
            
#            logout:
#                
#                # url para lanzar el logout
#                path:   /logout
#                
#                # para implementar redirigir despues del logout hay que agregar
#                # una clase y configuraciones, sino siempre te redirige al 
#                # path del login
#                # Para este caso conviene hacer el logout a pata
#                target: /
                
#    access_control:
#        # require ROLE_ADMIN 
#        - { path: ^/pruebas, roles: ROLE_ADMIN }
        
    access_control:
        - { path: ^/seguridad/user, roles: ROLE_USER }
        - { path: ^/seguridad/admin, roles: ROLE_ADMIN }
        - { path: ^/seguridad/autenticar, roles: IS_AUTHENTICATED_ANONYMOUSLY }
